#!/bin/bash
set -euo pipefail

cd "$(dirname "$0")/.."

echo "-------------------- 🚀 Setting up EC2-based LocalStack Environment --------------------"

# Update LocalStack docker-compose to use only EC2 services
echo "Starting LocalStack with EC2 support..."
cat > deploy/docker-compose.ec2.yml << 'EOF'
services:
  localstack:
    container_name: localstack-ec2
    image: localstack/localstack:3.0
    ports:
      - "4566:4566"
    environment:
      - SERVICES=ec2,s3,iam
      - DEBUG=1
      - PERSISTENCE=1
      - LOCALSTACK_HOST=localhost
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./localstack-data:/var/lib/localstack"
EOF

docker-compose -f deploy/docker-compose.ec2.yml up -d

echo "Waiting for LocalStack to be ready..."
timeout=60
counter=0
while ! curl -s http://localhost:4566/_localstack/health >/dev/null 2>&1; do
  if [ $counter -gt $timeout ]; then
    echo "❌ LocalStack failed to start within $timeout seconds"
    exit 1
  fi
  echo "Waiting for LocalStack... ($counter/$timeout)"
  sleep 5
  counter=$((counter + 5))
done

echo "✅ LocalStack is ready!"

# Generate SSH key if it doesn't exist
if [ ! -f ~/.ssh/id_rsa ]; then
  echo "Generating SSH key..."
  ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ""
fi

# Deploy infrastructure with Terraform
echo "Deploying EC2 infrastructure..."
cd terraform-ec2
terraform init
terraform validate
terraform plan
terraform apply -auto-approve

# Get the application URL
if terraform output application_url >/dev/null 2>&1; then
  APP_URL=$(terraform output -raw application_url)
  echo "✅ Application deployed at: $APP_URL"
  echo "📝 SSH access: $(terraform output -raw ssh_command)"
else
  echo "⚠️  Deployment completed but no URL output found"
fi

cd ..

echo "-------------------- ✅ EC2 LocalStack Environment Ready --------------------"
echo ""
echo "🌐 Application URL: $APP_URL"
echo "🔗 Frontend: $APP_URL"
echo "📡 Backend API: $APP_URL:17000"
echo ""
echo "💡 This setup provides:"
echo "  ✅ Complete EC2 instance simulation"
echo "  ✅ Elastic IP (free network exposure)"
echo "  ✅ EBS persistent storage"
echo "  ✅ Auto-deployment via user data script"
echo "  ✅ Production-ready architecture"
